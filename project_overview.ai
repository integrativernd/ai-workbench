
-------------------------------------------
file_navigation.py|Fetch project file paths
I:os;django;sys
F:fetch_project_file_paths():main logic
M:Setup Django env>Call fetch_project_file_paths()
V:3+
-------------------------------------------
manage.py|Django command-line utility
I:os;sys
F:main():Run admin tasks
M:Set env var>Import execute_from_command_line>Execute command
V:3+
-------------------------------------------
summarize_project.py|Django project summarizer
I:os;django;sys
F:fetch_summary():main entry point
M:Setup Django env>Call fetch_summary()
V:3+
-------------------------------------------
discord_server.py|Discord chatbot manager
I:os;django;sys
F:run_chatbot_manager():main entry point
M:Setup Django env>Run chatbot manager
V:3+
-------------------------------------------
README.md|AI Workbench framework

I:django;rq
F:
C:
G:
M:Built on Django web framework;Uses rq for task scheduling;Provides web interface and REST API for managing agents, tasks, datasets;Modular and extensible design
D:Python 3.6+;MacOS/Linux;Redis;Postgresql  
V:3.6+
-------------------------------------------
browse.py|Web page content retrieval
I:selenium
F:chrome_driver_path():get chromedriver path;get_web_page_content(url):retrieve webpage HTML content
G:PRODUCTION
M:Set up Chrome WebDriver>Navigate to URL>Wait for page load>Get HTML content>Close browser
D:selenium
V:3+
-------------------------------------------
models.py|Django model for encrypted user credentials
I:django.db;django.contrib.auth.models;config.settings;cryptography.fernet
F:encrypt_credentials():encrypt JSON credentials;decrypt_credentials():decrypt credentials
C:IntegrationCredential:store encrypted user credentials for providers
G:
M:Create IntegrationCredential instance>encrypt credentials on save>decrypt on get_credentials()
D:
V:3+
-------------------------------------------
github_create_pr.py|Create a Hello World pull request on GitHub
I:os;requests;base64;datetime
F:create_hello_world_pr():create new branch, add file, create PR;main():get config, call create_hello_world_pr()
G:API_URL
M:Get config from env>Create new branch>Add file>Create PR
D:requests
V:3+
-------------------------------------------
update_file.py|GitHub file update and pull request creation
I:os;requests;base64;datetime
F:update_file_and_create_pr():update file,create PR;main():get config,call update_file_and_create_pr()
G:API_URL
M:Get config>Update file>Create PR
D:requests
V:3+
-------------------------------------------
Python Program Summary

apps.py|Django app config
C:ToolsConfig:Django app config class;default_auto_field='django.db.models.BigAutoField';name='tools'
D:django
-------------------------------------------
Python Program Summary
github_example.py|Fetch GitHub README
I:os;requests;base64
F:get_github_readme(owner,repo,token):fetch private repo README
G:
M:Call get_github_readme() with args
D:requests
V:3+
-------------------------------------------
admin.py|Django admin customization for IntegrationCredential model
I:django.forms;django.contrib.admin;django.utils.html
F:IntegrationCredentialForm():ModelForm for IntegrationCredential;encrypted_credentials():display encrypted credentials
C:IntegrationCredentialAdmin:customized ModelAdmin for IntegrationCredential
G:
M:Register IntegrationCredential model;customize form fields;override admin methods
D:
V:
-------------------------------------------
file_navigation.py|Find project files
I:os;fnmatch;config.settings
F:find_project_files():search files recursively;fetch_project_file_paths():get file paths
G:BASE_DIR
M:Define patterns>Exclude dirs>Walk dirs>Filter files>Return paths
D:
V:3+
-------------------------------------------
search.py|Google search API wrapper
I:os;requests;json
F:get_search_data(query):fetch search results from Google API
G:url
M:Get query>Call API>Print response
D:requests
V:3+
-------------------------------------------
summarize_project.py|Summarize Python files in a project
I:os;tools.file_navigation;llm.anthropic_integration
F:chunk_file():split file into chunks;create_ai_file_path():generate AI file path;summary_for_file():generate summary for file;fetch_summary():process files and generate summaries
G:
M:Fetch project files>Chunk files>Generate summaries>Write to AI files
D:
V:3+
-------------------------------------------
browse2.py|Web page content scraper
I:selenium
F:get_web_page_content():fetch page source and text content
G:
M:Set up Chrome driver>Navigate to URL>Wait for page load>Get page source and text>Return content
D:selenium~=4.9.1;webdriver-manager~=3.8.6
V:3.6+
-------------------------------------------
views.py|Google OAuth2 authentication flow
I:django.shortcuts;django.http;django.conf;django.urls;django.contrib.admin.views.decorators;django.contrib.auth.decorators;tools.google.auth
F:superuser_required():check user is superuser;start_google_auth():initiate Google auth flow;google_auth_callback():handle OAuth2 callback;check_google_auth():check if Google credentials stored
C:
G:
M:Start auth>Redirect to Google>Callback handles code>Store credentials
D:
V:
-------------------------------------------
auth.py|Google authentication and credentials management
I:os.path;json;typing;google.auth.transport.requests;google.oauth2.credentials;google_auth_oauthlib.flow;googleapiclient.errors;config.settings;tools.models;django.contrib.auth.models
F:credentials_to_dict():convert Credentials to dict;get_google_auth_url():generate OAuth2 auth URL;handle_oauth2_callback():handle OAuth2 callback and save credentials;get_credentials():retrieve user's Google credentials
C:
G:SCOPES;BASE_DIR;DOCUMENT_ID;IS_HEROKU_APP;BASE_URL;SYSTEM_PROMPT
M:Provide functions to authenticate with Google APIs and manage user credentials
D:google-auth;google-auth-oauthlib;google-api-python-client;django
V:3.8+
-------------------------------------------
docs.py|Google Docs integration

I:os.path;google.auth.transport.requests;typing;google_auth_oauthlib.flow;googleapiclient.discovery;googleapiclient.errors;config.settings;json;llm.anthropic_integration;tools.models;django.contrib.auth.models;tools.google.auth
F:get_credentials():get Google credentials;GoogleDocsAIAgent:handle Docs operations;insert_text():insert text;delete_content():delete content;replace_text():replace text;create_title():create title;add_section():add section;handle_tool_use():execute tool;process_user_command():interpret commands
C:GoogleDocsAIAgent:manage Docs interactions
G:TOOL_DEFINITIONS;TOOL_MAP;TOOL_INPUT_MAP
M:Define tools>Handle user commands>Execute tools
D:google-auth;google-auth-oauthlib;google-api-python-client
V:3+
-------------------------------------------
test_search.py|Test search tool functionality
I:os;json;pickle;django.test;unittest.mock;requests
F:setUp():set up test env;get_or_record_search_data():get/record fixture data;test_get_search_data():test search result structure;test_get_search_data_missing_api_key():test missing API key;test_get_search_data_api_error():test API error handling
C:SearchToolTestCase:test case for search tool
G:RECORD_FIXTURES
M:Set up test case>Run tests for search data, missing API key, API error
D:requests
V:3+
-------------------------------------------
Python Program Summary
/Users/jtorreggiani/organizer/work/integrativernd/research/ai-workbench/tools/tests/test_browse.py|Test web scraping functionality

I:django.test;django.conf;unittest.mock;os;json;tools.browse
F:setUp():create fixtures dir;get_or_record_web_content():get/record web content;test_get_web_page_content():test web scraping
C:WebScraperTestCase:TestCase for web scraping
G:RECORD_FIXTURES
M:Setup>Get/record web content>Test scraping
D:
V:3+
-------------------------------------------
Python Program Summary|AI agent for handling user requests and tool integrations

I:datetime;redis;rq;pytz;json;typing;django_rq;channels.models;llm.analyze;llm.anthropic_integration;config.settings
F:ping():test;get_background_jobs():summarize running jobs;handle_tool_use():execute tool function;persist_message():save message;respond():process request and respond
C:
G:ToolFunction;TOOL_MAP;TOOL_INPUT_MAP;TOOL_DEFINITIONS
M:Receive request>Analyze>Execute tools>Respond
D:redis;rq;django_rq
V:3+
-------------------------------------------
models.py|Django models file
F:None
C:None
G:None
M:Empty file
D:django
V:N/A
-------------------------------------------
apps.py|Django app config
F:LlmConfig:Django app config class
V:3+
-------------------------------------------
Python Program Summary

admin.py|Django admin site registration
I:django.contrib
F:
C:
G:
M:
D:
V:
-------------------------------------------
Python Program Summary|Anthropic API integration

I:os;anthropic
F:get_message():get response from Anthropic API with tools;get_basic_message():get response without tools;get_message_stream():stream response (commented out)
C:
G:anthropic_client:Anthropic client instance
M:Initialize Anthropic client>Call API methods
D:anthropic
V:3+
-------------------------------------------
analyze.py|AI agent utility functions
I:pytz;datetime
F:get_current_time():return current EST time;get_runtime_environment():return env;approximate_token_count(text):estimate tokens;summarize_content(content):summarize text;document_content_for_user_input(prompt,input):generate response;get_search_results(data):summarize search;get_browse_results(data):summarize webpage;read_google_document(data):read doc content;update_google_document(data):append to doc;analyze_user_input(data):process request;get_basic_response(data):generate basic response
C:
G:
M:Define utility functions for AI agent
D:
V:3+
-------------------------------------------
views.py|Django views
F:render():render templates
V:3+
-------------------------------------------
test_anthropic_integration.py|Test Anthropic LLM integration
I:os;django.test;json;config.settings;pickle
F:setUp():create fixtures dir;tearDown():pass;get_or_record_basic_message():get/record message fixture;test_basic_message():test ping response;test_performance():test summarizing search results
C:AnthropicIntegrationTest:TestCase for Anthropic integration
G:search_results_fixture;RECORD_FIXTURES
M:Test Anthropic message generation;Use fixtures for consistent testing
D:
V:3+
-------------------------------------------
asgi.py|ASGI config for Django project
I:os;django.core.asgi
F:get_asgi_application():returns ASGI app instance
G:DJANGO_SETTINGS_MODULE=config.settings
M:Set env var>Get ASGI app
D:django
V:3+
-------------------------------------------
settings.py|Django settings for ai-workbench project
I:os;secrets;pathlib;sentry_sdk;dj_database_url
F:None
C:None
G:BASE_DIR;SYSTEM_PROMPT;SECRET_KEY;GOOGLE_DOC_SYSTEM_PROMPT;IS_HEROKU_APP;DEBUG;ALLOWED_HOSTS;BASE_URL;INSTALLED_APPS;MIDDLEWARE;ROOT_URLCONF;TEMPLATES;WSGI_APPLICATION;DATABASES;AUTH_PASSWORD_VALIDATORS;LANGUAGE_CODE;TIME_ZONE;USE_I18N;USE_TZ;STATIC_ROOT;STATIC_URL;STORAGES;WHITENOISE_KEEP_ONLY_HASHED_FILES;DEFAULT_AUTO_FIELD;RQ_QUEUES;LOGGING;RQ_SHOW_ADMIN_LINK;SESSION_COOKIE_NAME;SESSION_ENGINE;AI_CHANNEL_ID;DOCUMENT_ID;TOOL_DEFINITIONS;CREDENTIALS_ENCRYPTION_KEY
M:Import modules;Set paths;Configure Django settings;Setup databases;Define middleware;Configure static files;Setup RQ queues;Configure logging;Define tools
D:django==5.1;whitenoise;django-rq;channels;sentry-sdk;dj-database-url
V:3.8+
-------------------------------------------
urls.py|URL configuration for Django project
I:django.contrib;django.urls;web.views;tools.views
F:trigger_error():raise exception;
G:
M:Define URL patterns for views
D:
V:3+
-------------------------------------------
wsgi.py|Django WSGI configuration
I:os;django.core.wsgi
F:get_wsgi_application():returns WSGI app instance
G:DJANGO_SETTINGS_MODULE=config.settings
M:Set env var>Get WSGI app>Expose as application
D:django
V:3+
-------------------------------------------
models.py|Django model definitions
I:django.db
C:Greeting:stores date created
G:
M:Defines Greeting model with auto timestamp
D:
V:
-------------------------------------------
apps.py|Django app config

C:WebConfig:Django app config class
G:default_auto_field="django.db.models.BigAutoField"
I:django.apps
-------------------------------------------
Python Program Summary
admin.py|Django admin registration

I:django.contrib
C:GreetingAdmin:ModelAdmin subclass
M:Register Greeting model with admin site
-------------------------------------------
tests.py|Django tests for web app
F:test_index_page():check index page content;test_db_page():test db page logic
C:ExampleTest:TestCase subclass
M:Run tests>Assert expected behavior
V:3+
-------------------------------------------
views.py|Django views for web app
I:django.shortcuts
F:index():render index.html;db():render db.html w/ Greeting model objs
C:
G:
M:Define routes/views for index & db
D:
V:
-------------------------------------------
Python Program Summary

models.py|Django models
I:django.db
F:
C:
G:
M:
D:
V:3+
-------------------------------------------
Python Program Summary Format
apps.py|Django app config
C:DiscordServerConfig:sets default auto field and app name
-------------------------------------------
Python Program Summary

admin.py|Django admin registration
I:django.contrib
F:
C:
G:
M:
D:
V:
-------------------------------------------
chatbot_manager.py|Manage multiple Discord chatbots
I:asyncio;signal;contextlib;asgiref.sync;discord_server.chatbot;discord.ext.commands;config.settings;ai_agents.models
F:__init__():init BotManager;start_bot(ai_agent):start bot for agent;stop_bot(agent_id):stop bot for agent;stop_all_bots():stop all bots;get_ai_agent(agent_id):get AIAgent obj;get_ai_agent_by_name(agent_name):get AIAgent by name;check_bot_status():check bot status periodically;manage_bot_lifecycle():ctx mgr for bot lifecycle;start_manage_bot_lifecycle():main coroutine;run_chatbot_manager():entry point
C:ChatBotManager:manage multiple bots
G:IS_HEROKU_APP
M:Init mgr>Start bots>Monitor status>Graceful shutdown
D:discord_server.chatbot;discord.ext.commands;ai_agents.models
V:3.8+
-------------------------------------------
Python Program Summary

chatbot.py|Discord bot for AI agents
I:os;discord.ext.commands;discord;llm.respond;config.settings;django_rq;rq.job;channels.models;ai_agents.models;time
F:handle_message():generate AI response for message;ChatBot.__init__():initialize bot;ChatBot.setup_hook():start background loop;ChatBot.add_job():add job to queue;ChatBot.background_loop():process finished jobs;ChatBot.on_ready():log bot ready;ChatBot.enqueue_background_process():enqueue message handling;ChatBot.on_message():handle incoming messages
C:ChatBot:custom Discord bot
G:-
M:Initialize bot>Listen for messages>Enqueue message handling>Process jobs>Send responses
D:discord.py;django-rq
V:3+
-------------------------------------------
Python Program Summary

tests.py|Django tests
I:django
F:
C:
G:
M:Empty file for writing Django tests
D:
V:3+
-------------------------------------------
Python Program Summary

views.py|Django views
I:django.shortcuts
F:
C:
G:
M:Empty file
D:
V:
-------------------------------------------
models.py|Django model for AI agents
I:uuid;django_rq
F:__str__():return name and version;add_job(job_id):append job ID;remove_job(job_id):remove job ID;get_jobs():fetch jobs from queue;job_count():count jobs;active_job_count():count active jobs
C:AIAgent:store agent details like name,version,token;manage job IDs
G:
M:
D:
V:
-------------------------------------------
Python Program Summary

apps.py|Django app config
C:AIAgentsConfig:Django app config class
G:default_auto_field='django.db.models.BigAutoField'
V:3+
-------------------------------------------
admin.py|Django admin customization for AIAgent model
I:django.contrib.admin;django.utils.html;django.utils.safestring
F:AIAgentAdmin:customized admin class for AIAgent model;display_job_ids():display job IDs as HTML
C:AIAgentAdmin:customized admin class for AIAgent model
G:
M:Register AIAgent model with customized admin class;customize list display;search fields;filters;readonly fields;fieldsets
D:
V:
-------------------------------------------
Python Program Summary

tests.py|Django tests
I:django
F:
C:
G:
M:Empty file for writing Django tests
D:
V:3+
-------------------------------------------
Python Program Summary

views.py|Django views
I:django.shortcuts
F:
C:
G:
M:Empty file
D:
V:
-------------------------------------------
models.py|Django models for channels and messages
C:Channel:stores channel name, ID, type;Message:stores message content, timestamp, author, token
F:__str__():return channel name for Channel;return author and truncated message for Message
G:None
I:django.db.models;django.utils.timezone;uuid
M:Define Channel and Message models with respective fields and methods
D:Django
V:N/A
-------------------------------------------
Python Program Summary Format
apps.py|Django app config
C:ChannelsConfig:Django app config class
-------------------------------------------
admin.py|Django admin configuration

I:django.contrib.admin
F:get_readonly_fields():set read-only fields for existing objects;has_delete_permission():disable delete permission;has_add_permission():allow adding new objects
C:MessageAdmin:customizes admin interface for Message model
M:Register Channel and Message models with custom MessageAdmin class
V:N/A
-------------------------------------------
tests.py|Unit tests for Channel and Message models
F:ChannelModelTest:test_channel_creation():check instance;test_channel_fields():verify fields;test_channel_id_unique():ensure unique channel ID
F:MessageModelTest:test_message_creation():check instance;test_message_fields():verify fields;test_message_ordering():check ordering by timestamp;test_message_string_representation():check __str__;test_read_messages_by_channel():filter by channel;test_read_messages_by_channel_ordering():order by timestamp;test_read_messages_by_non_existent_channel():non-existent channel
C:ChannelModelTest;MessageModelTest
M:Set up test data>Run tests for model creation, fields, constraints>Clean up
V:3+
-------------------------------------------
views.py|Django views
F:render():render templates
V:3+
-------------------------------------------
